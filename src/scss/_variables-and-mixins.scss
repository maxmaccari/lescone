//------------
//-- Colors --
//------------
$beige-light: #edece4;
$beige-medium: #cbc6b9;
$beige-dark: #988c77;
$gray: #2a2426;
$green: #1ab912;


//-- Typography --
$type-1: 'PT Mono', monospace;
$type-2: 'Aref Ruqaa', serif;

@function em($pixel, $context: 16) {
  @return $pixel / $context + em;
}

@mixin type-1($size) {
  font-family: $type-1;
  @if $size == 18 {
    font-size: em(18);
    line-height: em(30, 18);
  }
}

@mixin type-2($size) {
  font-family: $type-2;
  @if $size == 18 {
    font-size: em(18);
    line-height: em(30, 18);
  } @else if $size == 24 {
    font-size: em(24);
    line-height: em(30, 24);
  }
}

//----------------
//-- Typography --
//----------------
$cols: 12;
$gutter: 20px;

$break-wide: 1200px;
$break-medium: 760px;
$break-small: 480px;

// Breakpoints
@mixin break($size) {
  @if $size == 'small' {
    @media screen and (min-width: #{$break-small + 1}) {
      @content;
    }
  } @else if $size == 'medium' {
    @media screen and (min-width: #{$break-medium}) {
      @content;
    }
  } @else if $size == 'wide' {
    @media screen and (min-width: #{$break-wide}) {
      @content;
    }
  } @else {
    @media screen and (min-width: #{$size}) {
      @content;
    }
  }
}

@function grid-size($col, $offset: false) {
  $width: $col / $cols * 100 + '%';
  $result: calc(#{$width} - #{$gutter});
  @if $offset == offset {
    $gutter: $gutter / 2;
    $result: calc(#{$width} + #{$gutter});
  }
  @return $result;
}

@mixin clearfix {
  &::after,
  &::before {
    clear: both;
    content: '';
    display: table;
  }
}

@mixin container {
  @include clearfix;
  max-width: $break-small;
  padding-left: 10px;
  padding-right: 10px;

  @include break('small') {
    margin: 0 auto;
    max-width: $break-medium;
    position: relative;
  }

  @include break('wide') {
    max-width: $break-wide;
  }
}

@mixin row {
  @include clearfix;
  position: relative;

  @include break('small') {
    margin-left: -$gutter / 2;
    margin-right: -$gutter / 2;
  }
}
